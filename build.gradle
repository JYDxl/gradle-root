buildscript {
  ext {
    gradle_version = '0.21.0'
    kotlin_version = '1.3.30'
    springboot_version = '2.1.4.RELEASE'
  }

  repositories {
    maven { url 'https://maven.aliyun.com/repository/public' }
  }

  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:$springboot_version")
    classpath("org.jetbrains.kotlin:kotlin-allopen:$kotlin_version")
    classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version")
    classpath("com.github.ben-manes:gradle-versions-plugin:$gradle_version")
  }
}

allprojects {
  group = 'org.github'
  version = '0.0.1-SNAPSHOT'

  ext {
    mybatis_plus_version = '3.1.0'
    vertx_version = '3.7.0'
  }
}

subprojects {
  apply plugin: 'kotlin'
  apply plugin: 'kotlin-spring'
  apply plugin: 'com.github.ben-manes.versions'
  apply plugin: 'io.spring.dependency-management'
  apply plugin: 'org.springframework.boot'

  sourceCompatibility = 1.8
  targetCompatibility = 1.8

  bootJar.enabled = false
  jar.enabled = true
  test.enabled = false

  configurations {
    compileOnly { extendsFrom annotationProcessor }
    testCompileOnly { extendsFrom testAnnotationProcessor }
  }

  compileKotlin {
    kotlinOptions {
      freeCompilerArgs = ['-Xjsr305=strict']
      jvmTarget = '1.8'
    }
  }

  compileTestKotlin {
    kotlinOptions {
      freeCompilerArgs = ['-Xjsr305=strict']
      jvmTarget = '1.8'
    }
  }

  repositories {
    maven { url 'https://maven.aliyun.com/repository/public' }
  }

  dependencies {
    implementation('com.fasterxml.jackson.module:jackson-module-kotlin')
    implementation('org.jetbrains.kotlin:kotlin-stdlib-jdk8')
    implementation('org.jetbrains.kotlin:kotlin-reflect')
    implementation("io.vertx:vertx-web:$vertx_version") { exclude group: 'io.netty' }
    implementation('org.mariadb.jdbc:mariadb-java-client:2.4.1')
    implementation('com.google.protobuf:protobuf-java-util:3.7.1')
    implementation("com.baomidou:mybatis-plus-boot-starter:$mybatis_plus_version")
    implementation('org.apache.commons:commons-lang3:3.9')
    implementation('commons-codec:commons-codec:1.12')
    implementation('com.squareup.okhttp3:okhttp:3.14.1')
    implementation('com.google.guava:guava:27.1-jre')
    implementation('com.google.inject:guice:4.2.2')
    implementation('com.github.ben-manes.caffeine:caffeine:2.7.0')
    implementation('io.netty:netty-all:4.1.35.Final')
    implementation('io.reactivex.rxjava2:rxjava:2.2.8')
    implementation('org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:1.2.0')
    implementation('com.squareup.retrofit2:retrofit:2.5.0')
    implementation('net.java.dev.jna:jna:5.3.0')
    implementation('org.javassist:javassist:3.25.0-GA')
    implementation('org.jctools:jctools-core:2.1.2')
    implementation('org.jboss.byteman:byteman:4.0.6')
    implementation('p6spy:p6spy:3.8.2')
    implementation('org.apache.commons:commons-pool2:2.6.2')

    testImplementation('org.springframework.boot:spring-boot-starter-test') { exclude module: 'android-json' }
    testImplementation("io.vertx:vertx-unit:$vertx_version") { exclude group: 'io.netty' }

    compileOnly("io.vertx:vertx-codegen:$vertx_version") { exclude group: 'io.netty' }
    testCompileOnly("io.vertx:vertx-codegen:$vertx_version") { exclude group: 'io.netty' }

    annotationProcessor('org.projectlombok:lombok')
    testAnnotationProcessor('org.projectlombok:lombok')
  }
}
