<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.github.web.mapper.IItemMapper">
  <select id="queryPagedComments" resultType="org.github.web.model.vo.ItemCommentVO">
    SELECT
        ic.comment_level as comment_level,
        ic.content       as content,
        ic.sepc_name     as spec_name,
        ic.created_time  as created_time,
        u.face           as user_face,
        u.nickname       as nickname
    from items_comments ic
             left join users u on ic.user_id = u.id
    where ic.item_id = #{bo.itemId}
    <if test="bo.level != null">
      and ic.comment_level = #{bo.level}
    </if>
 </select>

  <select id="search" resultType="org.github.web.model.vo.ItemSearchVO">
    SELECT
      i.id                    as item_id,
      i.item_name             as item_name,
      i.sell_counts           as sell_counts,
      ii.url                  as img_url,
      tmp_spec.price_discount as price
    from items i
           left join items_img ii on i.id = ii.item_id
           left join (select
                        item_id,
                        min(price_discount) as price_discount
                      from items_spec
                      group by item_id) tmp_spec on i.id = tmp_spec.item_id
    where ii.is_main = 1
      <if test="bo.keywords != null">
        and i.item_name like #{bo.keywords}
      </if>
    order by
      <choose>
        <when test='bo.sort == "c"'>
            i.sell_counts desc
        </when>
        <when test='bo.sort == "p"'>
            tmp_spec.price_discount asc
        </when>
        <otherwise>
            i.item_name asc
        </otherwise>
      </choose>
  </select>

  <select id="catItems" resultType="org.github.web.model.vo.ItemSearchVO">
    SELECT
    i.id                    as item_id,
    i.item_name             as item_name,
    i.sell_counts           as sell_counts,
    ii.url                  as img_url,
    tmp_spec.price_discount as price
    from items i
    left join items_img ii on i.id = ii.item_id
    left join (select
    item_id,
    min(price_discount) as price_discount
    from items_spec
    group by item_id) tmp_spec on i.id = tmp_spec.item_id
    where ii.is_main = 1
    and i.cat_id = #{bo.catId}
    order by
    <choose>
      <when test='bo.sort == "c"'>
        i.sell_counts desc
      </when>
      <when test='bo.sort == "p"'>
        tmp_spec.price_discount asc
      </when>
      <otherwise>
        i.item_name asc
      </otherwise>
    </choose>
  </select>
</mapper>
